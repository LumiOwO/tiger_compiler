Grammar

    0 $accept: S $end

    1 S: expr

    2 id: T_ID

    3 typename: T_TYPE

    4 binary_operation: expr O_COMPARE expr
    5                 | expr '+' expr
    6                 | expr '-' expr
    7                 | expr '*' expr
    8                 | expr '/' expr
    9                 | expr '=' expr
   10                 | expr '&' expr
   11                 | expr '|' expr
   12                 | expr '>' expr
   13                 | expr '<' expr

   14 expr: C_STRING
   15     | C_INTEGER
   16     | K_NIL
   17     | lvalue
   18     | '-' expr
   19     | binary_operation
   20     | lvalue O_ASSIGN expr
   21     | id '(' ')'
   22     | id '(' expr_list ')'
   23     | '(' ')'
   24     | '(' expr_seq ')'
   25     | typename '{' '}'
   26     | typename '{' field_list '}'
   27     | typename '[' expr ']' K_OF expr
   28     | K_IF expr K_THEN expr
   29     | K_IF expr K_THEN expr K_ELSE expr
   30     | K_WHILE expr K_DO expr
   31     | K_FOR id O_ASSIGN expr K_TO expr K_DO expr
   32     | K_BREAK
   33     | K_LET declaration_list K_IN K_END
   34     | K_LET declaration_list K_IN expr_seq K_END

   35 expr_seq: expr
   36         | expr_seq ';' expr

   37 expr_list: expr
   38          | expr_list ',' expr

   39 field_list: id '=' expr
   40           | field_list ',' id '=' expr

   41 lvalue: id
   42       | lvalue '.' id
   43       | lvalue '[' expr ']'

   44 declaration_list: declaration
   45                 | declaration_list declaration

   46 declaration: type_declaration
   47            | variable_declaration
   48            | function_declaration

   49 type_declaration: K_TYPE id '=' type

   50 type: typename
   51     | '{' '}'
   52     | '{' type_fields '}'
   53     | K_ARRAY K_OF typename

   54 type_fields: type_field
   55            | type_fields ',' type_field

   56 type_field: id ':' typename

   57 variable_declaration: K_VAR id O_ASSIGN expr
   58                     | K_VAR id ':' typename O_ASSIGN expr

   59 function_declaration: K_FUNC id '(' ')' '=' expr
   60                     | K_FUNC id '(' type_fields ')' '=' expr
   61                     | K_FUNC id '(' ')' ':' typename '=' expr
   62                     | K_FUNC id '(' type_fields ')' ':' typename '=' expr


Terminals, with rules where they appear

$end (0) 0
'&' (38) 10
'(' (40) 21 22 23 24 59 60 61 62
')' (41) 21 22 23 24 59 60 61 62
'*' (42) 7
'+' (43) 5
',' (44) 38 40 55
'-' (45) 6 18
'.' (46) 42
'/' (47) 8
':' (58) 56 58 61 62
';' (59) 36
'<' (60) 13
'=' (61) 9 39 40 49 59 60 61 62
'>' (62) 12
'[' (91) 27 43
']' (93) 27 43
'{' (123) 25 26 51 52
'|' (124) 11
'}' (125) 25 26 51 52
error (256)
K_NIL (258) 16
K_IF (259) 28 29
K_ELSE (260) 29
K_WHILE (261) 30
K_DO (262) 30 31
K_FOR (263) 31
K_TO (264) 31
K_BREAK (265) 32
K_THEN (266) 28 29
K_IN (267) 33 34
K_END (268) 33 34
K_OF (269) 27 53
K_TYPE (270) 49
K_ARRAY (271) 53
K_VAR (272) 57 58
K_FUNC (273) 59 60 61 62
K_LET (274) 33 34
O_ASSIGN (275) 20 31 57 58
O_COMPARE (276) 4
C_STRING (277) 14
C_INTEGER (278) 15
T_ID (279) 2
T_TYPE (280) 3


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
S (46)
    on left: 1, on right: 0
id (47)
    on left: 2, on right: 21 22 31 39 40 41 42 49 56 57 58 59 60 61
    62
typename (48)
    on left: 3, on right: 25 26 27 50 53 56 58 61 62
binary_operation (49)
    on left: 4 5 6 7 8 9 10 11 12 13, on right: 19
expr (50)
    on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
    32 33 34, on right: 1 4 5 6 7 8 9 10 11 12 13 18 20 27 28 29 30
    31 35 36 37 38 39 40 43 57 58 59 60 61 62
expr_seq (51)
    on left: 35 36, on right: 24 34 36
expr_list (52)
    on left: 37 38, on right: 22 38
field_list (53)
    on left: 39 40, on right: 26 40
lvalue (54)
    on left: 41 42 43, on right: 17 20 42 43
declaration_list (55)
    on left: 44 45, on right: 33 34 45
declaration (56)
    on left: 46 47 48, on right: 44 45
type_declaration (57)
    on left: 49, on right: 46
type (58)
    on left: 50 51 52 53, on right: 49
type_fields (59)
    on left: 54 55, on right: 52 55 60 62
type_field (60)
    on left: 56, on right: 54 55
variable_declaration (61)
    on left: 57 58, on right: 47
function_declaration (62)
    on left: 59 60 61 62, on right: 48


state 0

    0 $accept: . S $end

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    S                 go to state 13
    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 17
    lvalue            go to state 18


state 1

   16 expr: K_NIL .

    $default  reduce using rule 16 (expr)


state 2

   28 expr: K_IF . expr K_THEN expr
   29     | K_IF . expr K_THEN expr K_ELSE expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 19
    lvalue            go to state 18


state 3

   30 expr: K_WHILE . expr K_DO expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 20
    lvalue            go to state 18


state 4

   31 expr: K_FOR . id O_ASSIGN expr K_TO expr K_DO expr

    T_ID  shift, and go to state 9

    id  go to state 21


state 5

   32 expr: K_BREAK .

    $default  reduce using rule 32 (expr)


state 6

   33 expr: K_LET . declaration_list K_IN K_END
   34     | K_LET . declaration_list K_IN expr_seq K_END

    K_TYPE  shift, and go to state 22
    K_VAR   shift, and go to state 23
    K_FUNC  shift, and go to state 24

    declaration_list      go to state 25
    declaration           go to state 26
    type_declaration      go to state 27
    variable_declaration  go to state 28
    function_declaration  go to state 29


state 7

   14 expr: C_STRING .

    $default  reduce using rule 14 (expr)


state 8

   15 expr: C_INTEGER .

    $default  reduce using rule 15 (expr)


state 9

    2 id: T_ID .

    $default  reduce using rule 2 (id)


state 10

    3 typename: T_TYPE .

    $default  reduce using rule 3 (typename)


state 11

   18 expr: '-' . expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 30
    lvalue            go to state 18


state 12

   23 expr: '(' . ')'
   24     | '(' . expr_seq ')'

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12
    ')'        shift, and go to state 31

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 32
    expr_seq          go to state 33
    lvalue            go to state 18


state 13

    0 $accept: S . $end

    $end  shift, and go to state 34


state 14

   21 expr: id . '(' ')'
   22     | id . '(' expr_list ')'
   41 lvalue: id .

    '('  shift, and go to state 35

    $default  reduce using rule 41 (lvalue)


state 15

   25 expr: typename . '{' '}'
   26     | typename . '{' field_list '}'
   27     | typename . '[' expr ']' K_OF expr

    '{'  shift, and go to state 36
    '['  shift, and go to state 37


state 16

   19 expr: binary_operation .

    $default  reduce using rule 19 (expr)


state 17

    1 S: expr .
    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr

    O_COMPARE  shift, and go to state 38
    '|'        shift, and go to state 39
    '&'        shift, and go to state 40
    '='        shift, and go to state 41
    '>'        shift, and go to state 42
    '<'        shift, and go to state 43
    '+'        shift, and go to state 44
    '-'        shift, and go to state 45
    '*'        shift, and go to state 46
    '/'        shift, and go to state 47

    $default  reduce using rule 1 (S)


state 18

   17 expr: lvalue .
   20     | lvalue . O_ASSIGN expr
   42 lvalue: lvalue . '.' id
   43       | lvalue . '[' expr ']'

    O_ASSIGN  shift, and go to state 48
    '.'       shift, and go to state 49
    '['       shift, and go to state 50

    $default  reduce using rule 17 (expr)


state 19

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr
   28 expr: K_IF expr . K_THEN expr
   29     | K_IF expr . K_THEN expr K_ELSE expr

    K_THEN     shift, and go to state 51
    O_COMPARE  shift, and go to state 38
    '|'        shift, and go to state 39
    '&'        shift, and go to state 40
    '='        shift, and go to state 41
    '>'        shift, and go to state 42
    '<'        shift, and go to state 43
    '+'        shift, and go to state 44
    '-'        shift, and go to state 45
    '*'        shift, and go to state 46
    '/'        shift, and go to state 47


state 20

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr
   30 expr: K_WHILE expr . K_DO expr

    K_DO       shift, and go to state 52
    O_COMPARE  shift, and go to state 38
    '|'        shift, and go to state 39
    '&'        shift, and go to state 40
    '='        shift, and go to state 41
    '>'        shift, and go to state 42
    '<'        shift, and go to state 43
    '+'        shift, and go to state 44
    '-'        shift, and go to state 45
    '*'        shift, and go to state 46
    '/'        shift, and go to state 47


state 21

   31 expr: K_FOR id . O_ASSIGN expr K_TO expr K_DO expr

    O_ASSIGN  shift, and go to state 53


state 22

   49 type_declaration: K_TYPE . id '=' type

    T_ID  shift, and go to state 9

    id  go to state 54


state 23

   57 variable_declaration: K_VAR . id O_ASSIGN expr
   58                     | K_VAR . id ':' typename O_ASSIGN expr

    T_ID  shift, and go to state 9

    id  go to state 55


state 24

   59 function_declaration: K_FUNC . id '(' ')' '=' expr
   60                     | K_FUNC . id '(' type_fields ')' '=' expr
   61                     | K_FUNC . id '(' ')' ':' typename '=' expr
   62                     | K_FUNC . id '(' type_fields ')' ':' typename '=' expr

    T_ID  shift, and go to state 9

    id  go to state 56


state 25

   33 expr: K_LET declaration_list . K_IN K_END
   34     | K_LET declaration_list . K_IN expr_seq K_END
   45 declaration_list: declaration_list . declaration

    K_IN    shift, and go to state 57
    K_TYPE  shift, and go to state 22
    K_VAR   shift, and go to state 23
    K_FUNC  shift, and go to state 24

    declaration           go to state 58
    type_declaration      go to state 27
    variable_declaration  go to state 28
    function_declaration  go to state 29


state 26

   44 declaration_list: declaration .

    $default  reduce using rule 44 (declaration_list)


state 27

   46 declaration: type_declaration .

    $default  reduce using rule 46 (declaration)


state 28

   47 declaration: variable_declaration .

    $default  reduce using rule 47 (declaration)


state 29

   48 declaration: function_declaration .

    $default  reduce using rule 48 (declaration)


state 30

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr
   18 expr: '-' expr .

    '*'  shift, and go to state 46
    '/'  shift, and go to state 47

    $default  reduce using rule 18 (expr)


state 31

   23 expr: '(' ')' .

    $default  reduce using rule 23 (expr)


state 32

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr
   35 expr_seq: expr .

    O_COMPARE  shift, and go to state 38
    '|'        shift, and go to state 39
    '&'        shift, and go to state 40
    '='        shift, and go to state 41
    '>'        shift, and go to state 42
    '<'        shift, and go to state 43
    '+'        shift, and go to state 44
    '-'        shift, and go to state 45
    '*'        shift, and go to state 46
    '/'        shift, and go to state 47

    $default  reduce using rule 35 (expr_seq)


state 33

   24 expr: '(' expr_seq . ')'
   36 expr_seq: expr_seq . ';' expr

    ';'  shift, and go to state 59
    ')'  shift, and go to state 60


state 34

    0 $accept: S $end .

    $default  accept


state 35

   21 expr: id '(' . ')'
   22     | id '(' . expr_list ')'

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12
    ')'        shift, and go to state 61

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 62
    expr_list         go to state 63
    lvalue            go to state 18


state 36

   25 expr: typename '{' . '}'
   26     | typename '{' . field_list '}'

    T_ID  shift, and go to state 9
    '}'   shift, and go to state 64

    id          go to state 65
    field_list  go to state 66


state 37

   27 expr: typename '[' . expr ']' K_OF expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 67
    lvalue            go to state 18


state 38

    4 binary_operation: expr O_COMPARE . expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 68
    lvalue            go to state 18


state 39

   11 binary_operation: expr '|' . expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 69
    lvalue            go to state 18


state 40

   10 binary_operation: expr '&' . expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 70
    lvalue            go to state 18


state 41

    9 binary_operation: expr '=' . expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 71
    lvalue            go to state 18


state 42

   12 binary_operation: expr '>' . expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 72
    lvalue            go to state 18


state 43

   13 binary_operation: expr '<' . expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 73
    lvalue            go to state 18


state 44

    5 binary_operation: expr '+' . expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 74
    lvalue            go to state 18


state 45

    6 binary_operation: expr '-' . expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 75
    lvalue            go to state 18


state 46

    7 binary_operation: expr '*' . expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 76
    lvalue            go to state 18


state 47

    8 binary_operation: expr '/' . expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 77
    lvalue            go to state 18


state 48

   20 expr: lvalue O_ASSIGN . expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 78
    lvalue            go to state 18


state 49

   42 lvalue: lvalue '.' . id

    T_ID  shift, and go to state 9

    id  go to state 79


state 50

   43 lvalue: lvalue '[' . expr ']'

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 80
    lvalue            go to state 18


state 51

   28 expr: K_IF expr K_THEN . expr
   29     | K_IF expr K_THEN . expr K_ELSE expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 81
    lvalue            go to state 18


state 52

   30 expr: K_WHILE expr K_DO . expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 82
    lvalue            go to state 18


state 53

   31 expr: K_FOR id O_ASSIGN . expr K_TO expr K_DO expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 83
    lvalue            go to state 18


state 54

   49 type_declaration: K_TYPE id . '=' type

    '='  shift, and go to state 84


state 55

   57 variable_declaration: K_VAR id . O_ASSIGN expr
   58                     | K_VAR id . ':' typename O_ASSIGN expr

    O_ASSIGN  shift, and go to state 85
    ':'       shift, and go to state 86


state 56

   59 function_declaration: K_FUNC id . '(' ')' '=' expr
   60                     | K_FUNC id . '(' type_fields ')' '=' expr
   61                     | K_FUNC id . '(' ')' ':' typename '=' expr
   62                     | K_FUNC id . '(' type_fields ')' ':' typename '=' expr

    '('  shift, and go to state 87


state 57

   33 expr: K_LET declaration_list K_IN . K_END
   34     | K_LET declaration_list K_IN . expr_seq K_END

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_END      shift, and go to state 88
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 32
    expr_seq          go to state 89
    lvalue            go to state 18


state 58

   45 declaration_list: declaration_list declaration .

    $default  reduce using rule 45 (declaration_list)


state 59

   36 expr_seq: expr_seq ';' . expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 90
    lvalue            go to state 18


state 60

   24 expr: '(' expr_seq ')' .

    $default  reduce using rule 24 (expr)


state 61

   21 expr: id '(' ')' .

    $default  reduce using rule 21 (expr)


state 62

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr
   37 expr_list: expr .

    O_COMPARE  shift, and go to state 38
    '|'        shift, and go to state 39
    '&'        shift, and go to state 40
    '='        shift, and go to state 41
    '>'        shift, and go to state 42
    '<'        shift, and go to state 43
    '+'        shift, and go to state 44
    '-'        shift, and go to state 45
    '*'        shift, and go to state 46
    '/'        shift, and go to state 47

    $default  reduce using rule 37 (expr_list)


state 63

   22 expr: id '(' expr_list . ')'
   38 expr_list: expr_list . ',' expr

    ','  shift, and go to state 91
    ')'  shift, and go to state 92


state 64

   25 expr: typename '{' '}' .

    $default  reduce using rule 25 (expr)


state 65

   39 field_list: id . '=' expr

    '='  shift, and go to state 93


state 66

   26 expr: typename '{' field_list . '}'
   40 field_list: field_list . ',' id '=' expr

    ','  shift, and go to state 94
    '}'  shift, and go to state 95


state 67

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr
   27 expr: typename '[' expr . ']' K_OF expr

    O_COMPARE  shift, and go to state 38
    '|'        shift, and go to state 39
    '&'        shift, and go to state 40
    '='        shift, and go to state 41
    '>'        shift, and go to state 42
    '<'        shift, and go to state 43
    '+'        shift, and go to state 44
    '-'        shift, and go to state 45
    '*'        shift, and go to state 46
    '/'        shift, and go to state 47
    ']'        shift, and go to state 96


state 68

    4 binary_operation: expr . O_COMPARE expr
    4                 | expr O_COMPARE expr .
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '*'  shift, and go to state 46
    '/'  shift, and go to state 47

    O_COMPARE  error (nonassociative)
    '='        error (nonassociative)
    '>'        error (nonassociative)
    '<'        error (nonassociative)

    $default  reduce using rule 4 (binary_operation)


state 69

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   11                 | expr '|' expr .
   12                 | expr . '>' expr
   13                 | expr . '<' expr

    O_COMPARE  shift, and go to state 38
    '&'        shift, and go to state 40
    '='        shift, and go to state 41
    '>'        shift, and go to state 42
    '<'        shift, and go to state 43
    '+'        shift, and go to state 44
    '-'        shift, and go to state 45
    '*'        shift, and go to state 46
    '/'        shift, and go to state 47

    $default  reduce using rule 11 (binary_operation)


state 70

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   10                 | expr '&' expr .
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr

    O_COMPARE  shift, and go to state 38
    '='        shift, and go to state 41
    '>'        shift, and go to state 42
    '<'        shift, and go to state 43
    '+'        shift, and go to state 44
    '-'        shift, and go to state 45
    '*'        shift, and go to state 46
    '/'        shift, and go to state 47

    $default  reduce using rule 10 (binary_operation)


state 71

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
    9                 | expr '=' expr .
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '*'  shift, and go to state 46
    '/'  shift, and go to state 47

    O_COMPARE  error (nonassociative)
    '='        error (nonassociative)
    '>'        error (nonassociative)
    '<'        error (nonassociative)

    $default  reduce using rule 9 (binary_operation)


state 72

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   12                 | expr '>' expr .
   13                 | expr . '<' expr

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '*'  shift, and go to state 46
    '/'  shift, and go to state 47

    O_COMPARE  error (nonassociative)
    '='        error (nonassociative)
    '>'        error (nonassociative)
    '<'        error (nonassociative)

    $default  reduce using rule 12 (binary_operation)


state 73

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr
   13                 | expr '<' expr .

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '*'  shift, and go to state 46
    '/'  shift, and go to state 47

    O_COMPARE  error (nonassociative)
    '='        error (nonassociative)
    '>'        error (nonassociative)
    '<'        error (nonassociative)

    $default  reduce using rule 13 (binary_operation)


state 74

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    5                 | expr '+' expr .
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr

    '*'  shift, and go to state 46
    '/'  shift, and go to state 47

    $default  reduce using rule 5 (binary_operation)


state 75

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    6                 | expr '-' expr .
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr

    '*'  shift, and go to state 46
    '/'  shift, and go to state 47

    $default  reduce using rule 6 (binary_operation)


state 76

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    7                 | expr '*' expr .
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr

    $default  reduce using rule 7 (binary_operation)


state 77

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    8                 | expr '/' expr .
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr

    $default  reduce using rule 8 (binary_operation)


state 78

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr
   20 expr: lvalue O_ASSIGN expr .

    O_COMPARE  shift, and go to state 38
    '|'        shift, and go to state 39
    '&'        shift, and go to state 40
    '='        shift, and go to state 41
    '>'        shift, and go to state 42
    '<'        shift, and go to state 43
    '+'        shift, and go to state 44
    '-'        shift, and go to state 45
    '*'        shift, and go to state 46
    '/'        shift, and go to state 47

    $default  reduce using rule 20 (expr)


state 79

   42 lvalue: lvalue '.' id .

    $default  reduce using rule 42 (lvalue)


state 80

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr
   43 lvalue: lvalue '[' expr . ']'

    O_COMPARE  shift, and go to state 38
    '|'        shift, and go to state 39
    '&'        shift, and go to state 40
    '='        shift, and go to state 41
    '>'        shift, and go to state 42
    '<'        shift, and go to state 43
    '+'        shift, and go to state 44
    '-'        shift, and go to state 45
    '*'        shift, and go to state 46
    '/'        shift, and go to state 47
    ']'        shift, and go to state 97


state 81

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr
   28 expr: K_IF expr K_THEN expr .
   29     | K_IF expr K_THEN expr . K_ELSE expr

    K_ELSE     shift, and go to state 98
    O_COMPARE  shift, and go to state 38
    '|'        shift, and go to state 39
    '&'        shift, and go to state 40
    '='        shift, and go to state 41
    '>'        shift, and go to state 42
    '<'        shift, and go to state 43
    '+'        shift, and go to state 44
    '-'        shift, and go to state 45
    '*'        shift, and go to state 46
    '/'        shift, and go to state 47

    $default  reduce using rule 28 (expr)


state 82

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr
   30 expr: K_WHILE expr K_DO expr .

    O_COMPARE  shift, and go to state 38
    '|'        shift, and go to state 39
    '&'        shift, and go to state 40
    '='        shift, and go to state 41
    '>'        shift, and go to state 42
    '<'        shift, and go to state 43
    '+'        shift, and go to state 44
    '-'        shift, and go to state 45
    '*'        shift, and go to state 46
    '/'        shift, and go to state 47

    $default  reduce using rule 30 (expr)


state 83

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr
   31 expr: K_FOR id O_ASSIGN expr . K_TO expr K_DO expr

    K_TO       shift, and go to state 99
    O_COMPARE  shift, and go to state 38
    '|'        shift, and go to state 39
    '&'        shift, and go to state 40
    '='        shift, and go to state 41
    '>'        shift, and go to state 42
    '<'        shift, and go to state 43
    '+'        shift, and go to state 44
    '-'        shift, and go to state 45
    '*'        shift, and go to state 46
    '/'        shift, and go to state 47


state 84

   49 type_declaration: K_TYPE id '=' . type

    K_ARRAY  shift, and go to state 100
    T_TYPE   shift, and go to state 10
    '{'      shift, and go to state 101

    typename  go to state 102
    type      go to state 103


state 85

   57 variable_declaration: K_VAR id O_ASSIGN . expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 104
    lvalue            go to state 18


state 86

   58 variable_declaration: K_VAR id ':' . typename O_ASSIGN expr

    T_TYPE  shift, and go to state 10

    typename  go to state 105


state 87

   59 function_declaration: K_FUNC id '(' . ')' '=' expr
   60                     | K_FUNC id '(' . type_fields ')' '=' expr
   61                     | K_FUNC id '(' . ')' ':' typename '=' expr
   62                     | K_FUNC id '(' . type_fields ')' ':' typename '=' expr

    T_ID  shift, and go to state 9
    ')'   shift, and go to state 106

    id           go to state 107
    type_fields  go to state 108
    type_field   go to state 109


state 88

   33 expr: K_LET declaration_list K_IN K_END .

    $default  reduce using rule 33 (expr)


state 89

   34 expr: K_LET declaration_list K_IN expr_seq . K_END
   36 expr_seq: expr_seq . ';' expr

    K_END  shift, and go to state 110
    ';'    shift, and go to state 59


state 90

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr
   36 expr_seq: expr_seq ';' expr .

    O_COMPARE  shift, and go to state 38
    '|'        shift, and go to state 39
    '&'        shift, and go to state 40
    '='        shift, and go to state 41
    '>'        shift, and go to state 42
    '<'        shift, and go to state 43
    '+'        shift, and go to state 44
    '-'        shift, and go to state 45
    '*'        shift, and go to state 46
    '/'        shift, and go to state 47

    $default  reduce using rule 36 (expr_seq)


state 91

   38 expr_list: expr_list ',' . expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 111
    lvalue            go to state 18


state 92

   22 expr: id '(' expr_list ')' .

    $default  reduce using rule 22 (expr)


state 93

   39 field_list: id '=' . expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 112
    lvalue            go to state 18


state 94

   40 field_list: field_list ',' . id '=' expr

    T_ID  shift, and go to state 9

    id  go to state 113


state 95

   26 expr: typename '{' field_list '}' .

    $default  reduce using rule 26 (expr)


state 96

   27 expr: typename '[' expr ']' . K_OF expr

    K_OF  shift, and go to state 114


state 97

   43 lvalue: lvalue '[' expr ']' .

    $default  reduce using rule 43 (lvalue)


state 98

   29 expr: K_IF expr K_THEN expr K_ELSE . expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 115
    lvalue            go to state 18


state 99

   31 expr: K_FOR id O_ASSIGN expr K_TO . expr K_DO expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 116
    lvalue            go to state 18


state 100

   53 type: K_ARRAY . K_OF typename

    K_OF  shift, and go to state 117


state 101

   51 type: '{' . '}'
   52     | '{' . type_fields '}'

    T_ID  shift, and go to state 9
    '}'   shift, and go to state 118

    id           go to state 107
    type_fields  go to state 119
    type_field   go to state 109


state 102

   50 type: typename .

    $default  reduce using rule 50 (type)


state 103

   49 type_declaration: K_TYPE id '=' type .

    $default  reduce using rule 49 (type_declaration)


state 104

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr
   57 variable_declaration: K_VAR id O_ASSIGN expr .

    O_COMPARE  shift, and go to state 38
    '|'        shift, and go to state 39
    '&'        shift, and go to state 40
    '='        shift, and go to state 41
    '>'        shift, and go to state 42
    '<'        shift, and go to state 43
    '+'        shift, and go to state 44
    '-'        shift, and go to state 45
    '*'        shift, and go to state 46
    '/'        shift, and go to state 47

    $default  reduce using rule 57 (variable_declaration)


state 105

   58 variable_declaration: K_VAR id ':' typename . O_ASSIGN expr

    O_ASSIGN  shift, and go to state 120


state 106

   59 function_declaration: K_FUNC id '(' ')' . '=' expr
   61                     | K_FUNC id '(' ')' . ':' typename '=' expr

    '='  shift, and go to state 121
    ':'  shift, and go to state 122


state 107

   56 type_field: id . ':' typename

    ':'  shift, and go to state 123


state 108

   55 type_fields: type_fields . ',' type_field
   60 function_declaration: K_FUNC id '(' type_fields . ')' '=' expr
   62                     | K_FUNC id '(' type_fields . ')' ':' typename '=' expr

    ','  shift, and go to state 124
    ')'  shift, and go to state 125


state 109

   54 type_fields: type_field .

    $default  reduce using rule 54 (type_fields)


state 110

   34 expr: K_LET declaration_list K_IN expr_seq K_END .

    $default  reduce using rule 34 (expr)


state 111

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr
   38 expr_list: expr_list ',' expr .

    O_COMPARE  shift, and go to state 38
    '|'        shift, and go to state 39
    '&'        shift, and go to state 40
    '='        shift, and go to state 41
    '>'        shift, and go to state 42
    '<'        shift, and go to state 43
    '+'        shift, and go to state 44
    '-'        shift, and go to state 45
    '*'        shift, and go to state 46
    '/'        shift, and go to state 47

    $default  reduce using rule 38 (expr_list)


state 112

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr
   39 field_list: id '=' expr .

    O_COMPARE  shift, and go to state 38
    '|'        shift, and go to state 39
    '&'        shift, and go to state 40
    '='        shift, and go to state 41
    '>'        shift, and go to state 42
    '<'        shift, and go to state 43
    '+'        shift, and go to state 44
    '-'        shift, and go to state 45
    '*'        shift, and go to state 46
    '/'        shift, and go to state 47

    $default  reduce using rule 39 (field_list)


state 113

   40 field_list: field_list ',' id . '=' expr

    '='  shift, and go to state 126


state 114

   27 expr: typename '[' expr ']' K_OF . expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 127
    lvalue            go to state 18


state 115

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr
   29 expr: K_IF expr K_THEN expr K_ELSE expr .

    O_COMPARE  shift, and go to state 38
    '|'        shift, and go to state 39
    '&'        shift, and go to state 40
    '='        shift, and go to state 41
    '>'        shift, and go to state 42
    '<'        shift, and go to state 43
    '+'        shift, and go to state 44
    '-'        shift, and go to state 45
    '*'        shift, and go to state 46
    '/'        shift, and go to state 47

    $default  reduce using rule 29 (expr)


state 116

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr
   31 expr: K_FOR id O_ASSIGN expr K_TO expr . K_DO expr

    K_DO       shift, and go to state 128
    O_COMPARE  shift, and go to state 38
    '|'        shift, and go to state 39
    '&'        shift, and go to state 40
    '='        shift, and go to state 41
    '>'        shift, and go to state 42
    '<'        shift, and go to state 43
    '+'        shift, and go to state 44
    '-'        shift, and go to state 45
    '*'        shift, and go to state 46
    '/'        shift, and go to state 47


state 117

   53 type: K_ARRAY K_OF . typename

    T_TYPE  shift, and go to state 10

    typename  go to state 129


state 118

   51 type: '{' '}' .

    $default  reduce using rule 51 (type)


state 119

   52 type: '{' type_fields . '}'
   55 type_fields: type_fields . ',' type_field

    ','  shift, and go to state 124
    '}'  shift, and go to state 130


state 120

   58 variable_declaration: K_VAR id ':' typename O_ASSIGN . expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 131
    lvalue            go to state 18


state 121

   59 function_declaration: K_FUNC id '(' ')' '=' . expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 132
    lvalue            go to state 18


state 122

   61 function_declaration: K_FUNC id '(' ')' ':' . typename '=' expr

    T_TYPE  shift, and go to state 10

    typename  go to state 133


state 123

   56 type_field: id ':' . typename

    T_TYPE  shift, and go to state 10

    typename  go to state 134


state 124

   55 type_fields: type_fields ',' . type_field

    T_ID  shift, and go to state 9

    id          go to state 107
    type_field  go to state 135


state 125

   60 function_declaration: K_FUNC id '(' type_fields ')' . '=' expr
   62                     | K_FUNC id '(' type_fields ')' . ':' typename '=' expr

    '='  shift, and go to state 136
    ':'  shift, and go to state 137


state 126

   40 field_list: field_list ',' id '=' . expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 138
    lvalue            go to state 18


state 127

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr
   27 expr: typename '[' expr ']' K_OF expr .

    O_COMPARE  shift, and go to state 38
    '|'        shift, and go to state 39
    '&'        shift, and go to state 40
    '='        shift, and go to state 41
    '>'        shift, and go to state 42
    '<'        shift, and go to state 43
    '+'        shift, and go to state 44
    '-'        shift, and go to state 45
    '*'        shift, and go to state 46
    '/'        shift, and go to state 47

    $default  reduce using rule 27 (expr)


state 128

   31 expr: K_FOR id O_ASSIGN expr K_TO expr K_DO . expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 139
    lvalue            go to state 18


state 129

   53 type: K_ARRAY K_OF typename .

    $default  reduce using rule 53 (type)


state 130

   52 type: '{' type_fields '}' .

    $default  reduce using rule 52 (type)


state 131

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr
   58 variable_declaration: K_VAR id ':' typename O_ASSIGN expr .

    O_COMPARE  shift, and go to state 38
    '|'        shift, and go to state 39
    '&'        shift, and go to state 40
    '='        shift, and go to state 41
    '>'        shift, and go to state 42
    '<'        shift, and go to state 43
    '+'        shift, and go to state 44
    '-'        shift, and go to state 45
    '*'        shift, and go to state 46
    '/'        shift, and go to state 47

    $default  reduce using rule 58 (variable_declaration)


state 132

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr
   59 function_declaration: K_FUNC id '(' ')' '=' expr .

    O_COMPARE  shift, and go to state 38
    '|'        shift, and go to state 39
    '&'        shift, and go to state 40
    '='        shift, and go to state 41
    '>'        shift, and go to state 42
    '<'        shift, and go to state 43
    '+'        shift, and go to state 44
    '-'        shift, and go to state 45
    '*'        shift, and go to state 46
    '/'        shift, and go to state 47

    $default  reduce using rule 59 (function_declaration)


state 133

   61 function_declaration: K_FUNC id '(' ')' ':' typename . '=' expr

    '='  shift, and go to state 140


state 134

   56 type_field: id ':' typename .

    $default  reduce using rule 56 (type_field)


state 135

   55 type_fields: type_fields ',' type_field .

    $default  reduce using rule 55 (type_fields)


state 136

   60 function_declaration: K_FUNC id '(' type_fields ')' '=' . expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 141
    lvalue            go to state 18


state 137

   62 function_declaration: K_FUNC id '(' type_fields ')' ':' . typename '=' expr

    T_TYPE  shift, and go to state 10

    typename  go to state 142


state 138

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr
   40 field_list: field_list ',' id '=' expr .

    O_COMPARE  shift, and go to state 38
    '|'        shift, and go to state 39
    '&'        shift, and go to state 40
    '='        shift, and go to state 41
    '>'        shift, and go to state 42
    '<'        shift, and go to state 43
    '+'        shift, and go to state 44
    '-'        shift, and go to state 45
    '*'        shift, and go to state 46
    '/'        shift, and go to state 47

    $default  reduce using rule 40 (field_list)


state 139

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr
   31 expr: K_FOR id O_ASSIGN expr K_TO expr K_DO expr .

    O_COMPARE  shift, and go to state 38
    '|'        shift, and go to state 39
    '&'        shift, and go to state 40
    '='        shift, and go to state 41
    '>'        shift, and go to state 42
    '<'        shift, and go to state 43
    '+'        shift, and go to state 44
    '-'        shift, and go to state 45
    '*'        shift, and go to state 46
    '/'        shift, and go to state 47

    $default  reduce using rule 31 (expr)


state 140

   61 function_declaration: K_FUNC id '(' ')' ':' typename '=' . expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 143
    lvalue            go to state 18


state 141

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr
   60 function_declaration: K_FUNC id '(' type_fields ')' '=' expr .

    O_COMPARE  shift, and go to state 38
    '|'        shift, and go to state 39
    '&'        shift, and go to state 40
    '='        shift, and go to state 41
    '>'        shift, and go to state 42
    '<'        shift, and go to state 43
    '+'        shift, and go to state 44
    '-'        shift, and go to state 45
    '*'        shift, and go to state 46
    '/'        shift, and go to state 47

    $default  reduce using rule 60 (function_declaration)


state 142

   62 function_declaration: K_FUNC id '(' type_fields ')' ':' typename . '=' expr

    '='  shift, and go to state 144


state 143

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr
   61 function_declaration: K_FUNC id '(' ')' ':' typename '=' expr .

    O_COMPARE  shift, and go to state 38
    '|'        shift, and go to state 39
    '&'        shift, and go to state 40
    '='        shift, and go to state 41
    '>'        shift, and go to state 42
    '<'        shift, and go to state 43
    '+'        shift, and go to state 44
    '-'        shift, and go to state 45
    '*'        shift, and go to state 46
    '/'        shift, and go to state 47

    $default  reduce using rule 61 (function_declaration)


state 144

   62 function_declaration: K_FUNC id '(' type_fields ')' ':' typename '=' . expr

    K_NIL      shift, and go to state 1
    K_IF       shift, and go to state 2
    K_WHILE    shift, and go to state 3
    K_FOR      shift, and go to state 4
    K_BREAK    shift, and go to state 5
    K_LET      shift, and go to state 6
    C_STRING   shift, and go to state 7
    C_INTEGER  shift, and go to state 8
    T_ID       shift, and go to state 9
    T_TYPE     shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    id                go to state 14
    typename          go to state 15
    binary_operation  go to state 16
    expr              go to state 145
    lvalue            go to state 18


state 145

    4 binary_operation: expr . O_COMPARE expr
    5                 | expr . '+' expr
    6                 | expr . '-' expr
    7                 | expr . '*' expr
    8                 | expr . '/' expr
    9                 | expr . '=' expr
   10                 | expr . '&' expr
   11                 | expr . '|' expr
   12                 | expr . '>' expr
   13                 | expr . '<' expr
   62 function_declaration: K_FUNC id '(' type_fields ')' ':' typename '=' expr .

    O_COMPARE  shift, and go to state 38
    '|'        shift, and go to state 39
    '&'        shift, and go to state 40
    '='        shift, and go to state 41
    '>'        shift, and go to state 42
    '<'        shift, and go to state 43
    '+'        shift, and go to state 44
    '-'        shift, and go to state 45
    '*'        shift, and go to state 46
    '/'        shift, and go to state 47

    $default  reduce using rule 62 (function_declaration)
